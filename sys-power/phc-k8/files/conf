# /etc/conf.d/phc-k8: config file for /etc/init.d/phc-k8

# Whitespace-delimited list of AMD-specific voltage IDs (vids) to be applied to
# all processors. Such list defaults to the empty string, in which case no
# processor will be revolted. Such list otherwise assumes the same format as
# "/sys/devices/system/cpu/cpu0/cpufreq/phc_vids".
#
# Do *NOT* set this list until rigorously testing the long-term stability of
# your system under such vids. See below.
PHC_K8_VIDS=""

# To reliably find the highest stable vids (i.e., lowest stable voltages)
# supported by your system for undervolting, consider the following test regime.
# For simplicity, assume a single-processor system. After rebooting into a
# kernel patched with "phc-k8", run as root:
#
# 1. Change the current directory:
#    $ cd /sys/devices/system/cpu/cpu0/cpufreq
# 2. Print the default fids (frequency IDs) for your CPU:
#    $ echo phc_default_fids
#    10 2
# 3. Print the default vids (voltage IDs) for your CPU:
#    $ echo phc_default_vids
#    22 30
# 4. Switch to the "userspace" CPU governor:
#    $ echo "userspace" > scaling_governor
# 5. Temporarily switch your CPU to the first supported frequency, found by
#    plugging the first fid printed above into a formula specific to your CPU
#    make. In the author's case, this is
#    800MHz+(100MHz*fid)=800MHz+(100MHz*10)=1800MHz=1800000. See
#    "/usr/share/doc/phc-k8-"* for further details:
#    $ echo 1800000 > scaling_setspeed
# 6. Temporarily revolt your CPU by increasing the vid for this frequency by
#    by exactly 1 (2 at the most, if you're feeling mildly lucky). In the
#    author's case, this increases such vid to 22+1=23, a fairly mild but
#    occasionally unstable voltage drop of 25mV. Do *NOT* change the vid of any
#    other frequency; only one vid change can be reliably tested at a time:
#    $ echo "23 30" > phc_vids
# 7. Run a well-known torture test (e.g., "mprime", "cpuburn"):
#    $ mprime &
# 8. Monitor heat while performing such test (e.g., "sensors"):
#    $ sensors
# 9. If system sensors show motherboard or CPU heat to exceed sane thresholds,
#    kill such test *IMMEDIATELY*. Cease all testing. You have an unrelated but
#    clearly serious heat problem:
#    $ killall -9 mprime
# 10. If such test runs stably for at least 12 to 24 hours, the current revolt
#     is stable. In such case, return to step 6, increasing the same vid again
#     by exactly 1.
# 11. Repeat until such test either crashes the system or reports a failure. In
#     such case, decrease the current vid by exactly 1. The resulting number is
#     the highest stable vid (i.e., lowest stable voltage) for your CPU at this
#     frequency.
# 12. Continue to the next supported frequency by returning to step 5.
# 13. Repeat until identifying the highest stable vids for your CPU at *ALL*
#     supported frequencies. While this may take several days, it's almost
#     always worth it -- especially for those suffering otherwise intractible
#     issues at higher CPU voltages (e.g., heat).
# 14. Print the highest stable vids for your CPU:
#     $ cat phc_vids
#     26 32
# 15. Set the above variable to the highest stable vids (in the same order):
#     PHC_K8_VIDS="26 32"
# 16. Ensure "phc-k8" is run on startup.
#     $ rc-update add phc-k8 boot
# 17. Restart your system.
#     $ reboot
# 18. Print the (hopefully!) revolted vids for your CPU, for verification:
#     $ echo /sys/devices/system/cpu/cpu0/cpufreq/phc_vids
#     26 32
#
# See "/usr/share/doc/phc-k8-"* for further details.
